name: CI/CD Pipeline

on:
  push:
    branches: [main, develop]
  pull_request:
    branches: [main]

jobs:
  # Job برای Backend
  backend-build:
    name: Backend Build & Test
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: "3.12"

      - name: Install dependencies
        working-directory: ./backend
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt

      - name: Test Backend API
        working-directory: ./backend
        run: |
          echo "Backend tests will run here"
          # pytest اگر دارید

      - name: Build Backend Docker Image
        run: |
          docker build -t jwt-backend:${{ github.sha }} ./backend

  # Job برای Frontend
  frontend-build:
    name: Frontend Build & Test
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: "20"
          cache: "npm"
          cache-dependency-path: "./frontend/package-lock.json"

      - name: Install dependencies
        working-directory: ./frontend
        run: npm ci

      - name: Build Frontend
        working-directory: ./frontend
        run: npm run build -- --configuration=production

      - name: Build Frontend Docker Image
        run: |
          docker build -t jwt-frontend:${{ github.sha }} ./frontend

  # Job برای Docker Compose
  docker-compose-test:
    name: Docker Compose Test
    runs-on: ubuntu-latest
    needs: [backend-build, frontend-build]

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Build with Docker Compose
        run: |
          docker-compose build

      - name: Run Docker Compose
        run: |
          docker-compose up -d

      - name: Wait for services
        run: |
          sleep 30

      - name: Test Backend Health
        run: |
          curl -f http://localhost:8000 || exit 1

      - name: Test Frontend
        run: |
          curl -f http://localhost:4200 || exit 1

      - name: Show logs
        if: failure()
        run: |
          docker-compose logs

      - name: Stop services
        run: |
          docker-compose down
